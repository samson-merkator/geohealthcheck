"""empty message

Revision ID: 34531bfd7cab
Revises: bb91fb332c36
Create Date: 2018-03-19 16:59:42.235474

"""
from alembic import op
import sqlalchemy as sa
from GeoHealthCheck.migrations import alembic_helpers

# revision identifiers, used by Alembic.
revision = '34531bfd7cab'
down_revision = 'bb91fb332c36'
branch_labels = None
depends_on = None


def upgrade():
    if not alembic_helpers.table_has_column('resource', 'run_frequency'):
        print('Column run_frequency not present in resource table, will create')
        op.add_column(u'resource', sa.Column('run_frequency', sa.Integer(),
                      nullable=False, default=60, server_default='60'))
    else:
        print('Column run_frequency already present in resource table')

    if not alembic_helpers.tables_exist(['resource_lock']):
        print('Table for Resource locking not present, will create')
        # ### commands auto generated by Alembic - please adjust! ###
        op.create_table('resource_lock',
        sa.Column('identifier', sa.Integer(), nullable=False, unique=True),
        sa.Column('resource_identifier', sa.Integer(), nullable=False, unique=True),
        sa.Column('owner', sa.Text, nullable=False, default='NOT SET', server_default='NOT SET'),
        sa.Column('start_time', sa.DateTime, nullable=False),
        sa.Column('end_time', sa.DateTime, nullable=False),
        sa.ForeignKeyConstraint(['resource_identifier'], ['resource.identifier'], ),
        sa.PrimaryKeyConstraint('identifier')
        )
        # ### end Alembic commands ###
    else:
        print('Table for Resource-locking already present, will not create')


def downgrade():
    print('Dropping Column run_frequency from resource table')
    op.drop_column(u'resource', 'run_frequency')
    op.drop_table('resource_lock')
