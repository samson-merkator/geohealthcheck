"""empty message

Revision ID: 496427d03f87
Revises: 
Create Date: 2017-04-24 17:47:44.802571

"""
from alembic import op
import sqlalchemy as sa
import imp
import os
from GeoHealthCheck.migrations import alembic_helpers

# revision identifiers, used by Alembic.
revision = '496427d03f87'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    print('Before: DB tables: %s' % str(alembic_helpers.get_table_names()))
    if not alembic_helpers.tables_exist(['tag', 'resource_tags']):
        print('Tables for Tag-support not present, will create them')
        op.create_table('tag',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
        )
        op.create_table('resource_tags',
        sa.Column('identifier', sa.Integer(), nullable=False),
        sa.Column('tag_id', sa.Integer(), nullable=True),
        sa.Column('resource_identifier', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['resource_identifier'], ['resource.identifier'], ),
        sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
        sa.PrimaryKeyConstraint('identifier')
        )
    else:
        print('Tables for tag-support already present, will not create them')
        
    # op.drop_table('spatial_ref_sys')
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('spatial_ref_sys',
    # sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    # sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    # sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    # sa.CheckConstraint(u'(srid > 0) AND (srid <= 998999)', name=u'spatial_ref_sys_srid_check'),
    # sa.PrimaryKeyConstraint('srid', name=u'spatial_ref_sys_pkey')
    # )
    op.drop_table('resource_tags')
    op.drop_table('tag')
    # ### end Alembic commands ###
