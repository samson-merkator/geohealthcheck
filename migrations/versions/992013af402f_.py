"""empty message

Revision ID: 992013af402f
Revises: 496427d03f87
Create Date: 2017-04-24 17:51:15.481079

"""
from alembic import op
import sqlalchemy as sa
import imp
import os
from GeoHealthCheck.migrations import alembic_helpers

# revision identifiers, used by Alembic.
revision = '992013af402f'
down_revision = '496427d03f87'
branch_labels = None
depends_on = None


def upgrade():

    if not alembic_helpers.tables_exist(['probe_vars', 'check_vars']):
        print('Tables for Probe-support not present, will create them')
        # ### commands auto generated by Alembic - please adjust! ###
        op.create_table('probe_vars',
        sa.Column('identifier', sa.Integer(), nullable=False),
        sa.Column('resource_identifier', sa.Integer(), nullable=True),
        sa.Column('probe_class', sa.Text(), nullable=False),
        sa.Column('parameters', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['resource_identifier'], ['resource.identifier'], ),
        sa.PrimaryKeyConstraint('identifier')
        )
        op.create_table('check_vars',
        sa.Column('identifier', sa.Integer(), nullable=False),
        sa.Column('probe_vars_identifier', sa.Integer(), nullable=True),
        sa.Column('check_class', sa.Text(), nullable=False),
        sa.Column('parameters', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['probe_vars_identifier'], ['probe_vars.identifier'], ),
        sa.PrimaryKeyConstraint('identifier')
        )
        # ### end Alembic commands ###
    else:
        print('Tables for Probe-support already present, will not create them')

    if not alembic_helpers.table_has_column('run', 'report'):
        print('Column report not present in run table, will create')
        op.add_column(u'run', sa.Column('report', sa.Text(), nullable=True))
    else:
        print('Column report already present in run table')


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column(u'run', 'report')
    op.drop_table('check_vars')
    op.drop_table('probe_vars')
    # ### end Alembic commands ###
